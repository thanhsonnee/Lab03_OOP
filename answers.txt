Question: - If you create a constructor method to build a DVD by title then create a constructor method to build a DVD by category. 
Does JAVA allow you to do this?

Trả lời: 
JAVA có cho phép làm điều này thông qua tính năng nạp chồng phương thức khởi tạo (constructor overloading). 
Trong Java, ta có thể định nghĩa nhiều phương thức khởi tạo với các tham số khác nhau trong cùng một lớp. 
Mỗi phương thức khởi tạo sẽ có một danh sách tham số khác nhau, và Java sẽ phân biệt chúng dựa trên số lượng và kiểu của các tham số khi gọi.

Do vậy, ta có thể tạo một phương thức khởi tạo nhận tiêu đề của DVD và một phương thức khởi tạo khác nhận thể loại, miễn là danh sách tham số của chúng khác nhau.

=======
LAB03_OOP
1. After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two objects still remain?
Phương thức swap chỉ thay đổi tham chiếu cục bộ (o1 và o2) bên trong phương thức, nhưng không thay đổi tham chiếu thực tế của 
jungleDVD và cinderellaDVD trong phương thức main. Do đó, tiêu đề của hai đối tượng không bị ảnh hưởng và vẫn giữ nguyên như ban đầu.
2. After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is the title of the JungleDVD changed?
Trong phương thức changeTitle, giá trị thuộc tính title của đối tượng jungleDVD được thay đổi trực tiếp thông qua phương thức setTitle. 
Vì jungleDVD là một tham chiếu tới đối tượng thực trong bộ nhớ, nên bất kỳ sự thay đổi nào trên thuộc tính của đối tượng này sẽ được phản ánh
ngay trong chương trình. Do đó, tiêu đề của jungleDVD đã bị thay đổi thành tiêu đề của cinderellaDVD.

-------
LAB 04: 
Lớp nào nên triển khai interface Comparable?
Lớp cần sắp xếp theo một quy tắc mặc định duy nhất nên triển khai Comparable. Ví dụ, nếu các đối tượng Media thường được sắp xếp theo title, lớp Media nên triển khai Comparable.

Cách triển khai phương thức compareTo() như thế nào để phản ánh thứ tự mà chúng ta muốn?
Triển khai phương thức compareTo() bằng cách so sánh các thuộc tính phản ánh quy tắc sắp xếp. Ví dụ:

@Override
public int compareTo(Media other) {
    int titleCompare = this.title.compareTo(other.title);
    if (titleCompare != 0) return titleCompare;
    return Float.compare(this.cost, other.cost);
}

Chúng ta có thể có hai quy tắc sắp xếp của một đối tượng (theo title rồi cost và theo cost rồi title) khi sử dụng Comparable không?
Không, Comparable chỉ hỗ trợ một quy tắc mặc định duy nhất. Nếu cần nhiều quy tắc sắp xếp, bạn phải sử dụng thêm Comparator.

Giả sử DVDs có quy tắc sắp xếp khác với các loại phương tiện khác, đó là theo title, rồi đến độ dài giảm dần, rồi đến cost. Làm thế nào để bạn sửa đổi mã để hỗ trợ điều này?
Để hỗ trợ một quy tắc sắp xếp khác cho DVDs, bạn có thể tạo một lớp con của Item, ví dụ DVD, và ghi đè lại phương thức compareTo() để sử dụng quy tắc sắp xếp riêng cho loại DVD.

